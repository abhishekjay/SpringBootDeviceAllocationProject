package com.deloitte.device.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.client.RestTemplate;

import com.deloitte.customer.entity.CustomerTable;
import com.deloitte.customer.model.Order;
import com.deloitte.customer.model.Response;
import com.deloitte.device.service.DeviceService;
import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

public class DeviceController {
	
	private RestTemplate restTemplate;
	
	private DeviceService deviceService;
	
	@GetMapping("/get/{id}")
//	@HystrixCommand(fallbackMethod = "orderFailureFallback")
	public ResponseEntity<Response> getDevice(@PathVariable("id") Integer id) {
		
		CustomerTable customer = customerService.getCustomer(id);
		List<Order> ordersList = restTemplate.getForObject("http://localhost:8081/orders/getOrders/"+id,List.class);
		List<Order> ordersList1 = restTemplate.getForObject("http://localhost:8081/orders/getOrders/"+id,List.class);
		Response response = new Response(customer,ordersList,ordersList1);
		
		return new ResponseEntity<Response>(response,HttpStatus.OK);
	}

}
